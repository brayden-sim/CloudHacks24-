[{"difficulty": "Easy", "type": "Coordinates", "text": "## Coding Challenge: Distance Between Points\n\n**Description:**\n\nYou are given two sets of coordinates representing two points on a 2D plane. Your task is to calculate the distance between these two points.\n\n**Sample Input:**\n\n```\n(1, 2)\n(4, 6)\n```\n\n**Sample Output:**\n\n```\n5.0\n```\n\n**Hints:**\n\n* Use the `math` module and its `sqrt()` function to calculate the square root.\n* Use the formula for calculating the distance between two points: `sqrt((x2 - x1)^2 + (y2 - y1)^2)`.\n\n\n**Note:** This challenge can be solved using basic arithmetic operations and the square root function. You will need to extract the coordinates from the input and use them in the distance formula."}, {"difficulty": "Easy", "type": "Dictionaries", "text": "## Easy Python Challenge: Counting Occurrences\n\n**Description:**\n\nWrite a Python program that takes a list of words as input and returns a dictionary where the keys are the words and the values are the number of times each word appears in the list.\n\n**Sample Input:**\n\n```python\n[\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"apple\"]\n```\n\n**Sample Output:**\n\n```python\n{'apple': 3, 'banana': 2, 'orange': 1}\n```\n\n**Hints:**\n\n* Use a dictionary to store the word counts.\n* Iterate through the list of words using a loop.\n* Use the `get()` method to check if a word already exists in the dictionary.\n* If the word exists, increment its count. Otherwise, add the word to the dictionary with a count of 1.\n* After processing all words, return the dictionary."}, {"difficulty": "Medium", "type": "Arrays", "text": "##  Finding the Missing Number\n\nYou are given an array of integers that contains all numbers from 1 to n, except one. Your task is to find the missing number.\n\n**Example Input:**\n```python\n[1, 2, 4, 5]\n```\n\n**Example Output:**\n```python\n3\n```\n\n**Hints:**\n* You can use the `sum()` function to calculate the sum of the elements in the array.\n* You can use the formula `n(n+1)/2` to calculate the sum of the first n natural numbers.\n* The missing number can be found by subtracting the sum of the array elements from the sum of the first n natural numbers.\n\n**Important Notes:**\n* The array will always contain `n-1` integers.\n* All numbers in the array will be distinct and within the range of 1 to n."}, {"difficulty": "Easy", "type": "Arrays", "text": "## Challenge: Find the Missing Number\n\n**Description:** You are given an array of integers from 1 to N, where one number is missing. Your task is to find the missing number.\n\n**Sample Input:**\n\n```python\n[1, 2, 4, 5, 6, 7, 8]\n```\n\n**Sample Output:**\n\n```\n3\n```\n\n**Hints:**\n\n* You can use the `sum()` function to calculate the sum of the elements in the array.\n* You can use the formula for the sum of an arithmetic series to calculate the expected sum of the numbers from 1 to N.\n* The missing number can be found by subtracting the actual sum of the array from the expected sum."}, {"difficulty": "Easy", "type": "Strings", "text": "##  String Splitter\n\n**Description:**\nWrite a Python program that takes a string as input and splits it into two equal halves. If the string has an odd number of characters, the first half should be one character longer than the second half. Print both halves of the string.\n\n**Sample Input:**\n```\nHello World!\n```\n\n**Sample Output:**\n```\nHello \n World!\n```\n\n**Hints:**\n* Use the `len()` function to determine the length of the string.\n* Use integer division (//) to calculate the middle index.\n* Use string slicing to extract the two halves."}]